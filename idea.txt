при скролле должно продвигаться и сменятся экраны должны. 
цветовое разделение менеджерской и технической веток
упор на фичи и краткое описание команд

экспорт резюмехи

dicsover me by (navigation section):
- education
- experience
- stack
- achievements
- education

me
- intro
- contacts
- work experience
- stack
- education
-- projects (light pack assemblimg, dc/ac inverter bluetooth, mc programming)
- languages
- achievements

goal
- experience review
    - easy way for me to represent myself to new employer
    - easy way to add new skills and experience
- code blocks to resum (просто список с поиском и код с копированием для последующей работы и примерчики)

Perfect picture of project
- no backend, data are stored in files within src


feature
- scroll by history of experience
- extract resume from site


comfort zone
1) code formatters and linters 
  - all indentation in all files are two spaces / tab length is 2 spaces / prettier is active
2) autho checks by stage and commit
3) css modules
4) tests env are configured

todo, to come to the comfort zone:
done - figure out how to convert all files in vscode to the 'two spaces' format
done - configure tab length in vscode 
- install prettier and make its config comport for me



1) setup common code style in the project: prettier and eslint
- install packages
    - "@typescript-eslint/eslint-plugin": "^5.55.0",
    - "@typescript-eslint/parser": "^5.55.0",
    - "eslint": "^8.36.0",
    - "eslint-plugin-react": "^7.32.2",
    - "prettier": "^2.8.4"
- add and configure files
    - .prettierrc.json
    - .prettierignore (configure as your .gitignore file and add some specific folders)
    - .eslintrc.json (go throught wizard with "eslint --init" comand)
- install ESLint plugin for vscode for adding authofix  feature to context file menu
2) set up automatically code checks by stage and commit phases
- install packages
    - lint-staged
    - simple-git-hooks
- configure package.json
  "simple-git-hooks": {
    "pre-commit": "npx --no-install lint-staged" // you can add tests here
  },
  "lint-staged": {
    "**/*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ]
  },

3) setup css-modules with ts project
- install typescript-plugin-css-modules
- configure tsconfig.json with "plugins": [{ "name": "typescript-plugin-css-modules" }]



feature - пользовательские фичи. например:
- валидация форм
  - базовые элементы (инпуты)
  - валидация загружемых файлов
- пагинация
- поиск и фильтрация
- модальное окно
-- 


- feature
-- solution categories []
--- snippets []

